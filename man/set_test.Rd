% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_units.r
\name{set_test}
\alias{set_test}
\title{Set test units}
\usage{
set_test(
  data,
  column,
  select = NULL,
  variable = NULL,
  damage = 10,
  operator = "=="
)
}
\arguments{
\item{data}{A createUnitsBundle object, as created with \code{\link{create_units}}}

\item{column}{The name of a column in data that has the correct annotation values. The name of the column needs to correspond to a variable/question
in the codebook, or alternatively use the 'variable' argument. If you need to set training answers for multiple columns (e.g.,
for units with multiple questions) you can use the set_test function multiple times.}

\item{select}{A logical expression to select which units are test units. like `id %in% c(...)`, or `type == 'test'`. If not given,
will use all units for which column is not NA. If units have already been assigned as train units, they will not be assigned as test units.}

\item{variable}{The name of the variable as used in the codebook. If not specified, the name of the column will be used.}

\item{damage}{The amount of damage a coder should receive for getting a value wrong.}

\item{operator}{How should the annotation value be compared to the column value? Default is "==" (equals).
But to screen on age you could for instance use "<=".}

\item{on_wrong}{A markdown string that will be displayed when a coder gives an incorrect answer. If not given, no message will be displayed.}
}
\value{

}
\description{
Mark certain units as test units, and provide the correct answers/annotations for these units.
If the answer/annotation is wrong, coders receive damage.
}
